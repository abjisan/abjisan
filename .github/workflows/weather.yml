name: Update Weather
on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:        # Manual trigger
  push:
    branches: [ main ]

jobs:
  update-weather:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Update weather in README
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        run: |
          # Create a simple Node.js script to update the weather
          cat > update-weather.js << 'EOF'
          const fs = require('fs');
          const https = require('https');

          const city = 'London';  // Change to your city
          const apiKey = process.env.WEATHER_API_KEY;
          
          const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;

          https.get(url, (response) => {
            let data = '';

            response.on('data', (chunk) => {
              data += chunk;
            });

            response.on('end', () => {
              try {
                const weather = JSON.parse(data);
                const temp = Math.round(weather.main.temp);
                const condition = weather.weather[0].main;
                const emoji = getWeatherEmoji(condition);
                
                function getWeatherEmoji(condition) {
                  const emojis = {
                    'Clear': '‚òÄÔ∏è',
                    'Clouds': '‚òÅÔ∏è',
                    'Rain': 'üåßÔ∏è',
                    'Drizzle': 'üå¶Ô∏è',
                    'Thunderstorm': '‚õàÔ∏è',
                    'Snow': '‚ùÑÔ∏è',
                    'Mist': 'üå´Ô∏è',
                    'Fog': 'üå´Ô∏è'
                  };
                  return emojis[condition] || 'üå§Ô∏è';
                }

                let readme = fs.readFileSync('./README.md', 'utf8');
                const timestamp = new Date().toLocaleString();
                
                const weatherSection = `## üå§Ô∏è Current Weather
- **Location**: ${city}
- **Temperature**: ${temp}¬∞C
- **Condition**: ${condition} ${emoji}
- **Updated**: ${timestamp}

*Updates every 6 hours*`;

                // Check if weather section already exists
                if (readme.includes('## üå§Ô∏è Current Weather')) {
                  // Replace existing weather section
                  readme = readme.replace(/## üå§Ô∏è Current Weather[\s\S]*?(?=## |$)/, weatherSection);
                } else {
                  // Add after the first header (you can change this)
                  const lines = readme.split('\n');
                  lines.splice(1, 0, '\n' + weatherSection + '\n');
                  readme = lines.join('\n');
                }

                fs.writeFileSync('./README.md', readme);
                console.log('Weather updated successfully!');
                
              } catch (error) {
                console.error('Error updating weather:', error.message);
                // Don't fail the workflow for weather API errors
              }
            });
          }).on('error', (error) => {
            console.error('Error fetching weather:', error.message);
            // Don't fail the workflow for weather API errors
          });
          EOF

          node update-weather.js

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git diff --staged --quiet || git commit -m "üå§Ô∏è Update weather information"
          git push
